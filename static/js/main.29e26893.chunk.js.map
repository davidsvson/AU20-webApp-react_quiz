{"version":3,"sources":["components/Game.jsx","components/Welcome.jsx","components/Result.jsx","App.js","reportWebVitals.js","index.js"],"names":["Game","answeredCorrectly","questions","question","answers","correct","useState","selectedAnswer","setSelectedAnswer","decided","setDecided","params","useParams","currentquestion","length","q","history","useHistory","options","map","answer","index","className","type","name","disabled","onClick","setTimeout","Number","push","process","Welcome","to","Result","score","restartQuiz","App","setScore","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29e26893.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport {useHistory, useParams} from 'react-router-dom';\r\n\r\n\r\nconst Game = ({ answeredCorrectly }) => {\r\n    const questions = getQuestions();\r\n    const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n    const [decided, setDecided] = useState(false);\r\n\r\n    let params = useParams();\r\n    let currentquestion = '1';\r\n    if ('currentquestion' in params) {\r\n        if (params.currentquestion > 0 && params.currentquestion < questions.length) {\r\n            currentquestion = params.currentquestion;\r\n        }\r\n    } \r\n\r\n    //let { currentquestion } = useParams();\r\n    \r\n    const q = questions[currentquestion - 1 ];\r\n\r\n    const history = useHistory();\r\n\r\n    const handleDecided = () => {\r\n        setDecided(true);\r\n        if( selectedAnswer === q.correct) {\r\n            answeredCorrectly(); // report score back to App\r\n        }\r\n        setTimeout(() => {      \r\n            if( Number(currentquestion) === questions.length) {\r\n                history.push(process.env.PUBLIC_URL + \"/result\");\r\n            } else {\r\n                history.push(process.env.PUBLIC_URL + \"/game/\"+(Number(currentquestion)+1))\r\n                setSelectedAnswer(null);\r\n                setDecided(false);\r\n            }\r\n        }, 100);\r\n    }\r\n\r\n    //let b = true;\r\n    //let a = b ? 'hej' : 'då'; om b är true så blir a= 'hej' annars blir a='då'\r\n\r\n\r\n    // map på en lista\r\n    // const list = [1, 5, 7, 4];\r\n    // const elements = list.map(item => <li key={item}> {item} </li>);\r\n    // return (<ul> {elements} </ul>);\r\n\r\n\r\n    const options = q.answers.map((answer, index) => (\r\n        <p className={\"option\" + ((decided && index === q.correct) ? ' correct' : '')}  key={answer}>\r\n            <label>\r\n                <input type=\"radio\"  name=\"question\" disabled={decided}\r\n                    onClick={() => setSelectedAnswer(index)} />\r\n                {answer}\r\n            </label>\r\n        </p>\r\n    ))\r\n\r\n    return (\r\n        <section className=\"game\">\r\n            <h2>Question {currentquestion} of {questions.length} </h2>\r\n            <h3>{q.question}</h3>\r\n            {options}\r\n            \r\n            <button disabled={decided} onClick={handleDecided}>Answer</button>\r\n        </section>\r\n    )\r\n\r\n}\r\n\r\n// <p className=\"option\"><label><input type=\"radio\" /> 24 maj </label> </p>\r\n// <p className=\"option\"><label><input type=\"radio\" /> 24 dec </label> </p>\r\n//<p className=\"option\"><label><input type=\"radio\" /> 3 nov </label> </p>\r\n\r\nfunction getQuestions() {\r\n    return [\r\n        {\r\n            question: 'När är det julafton?',\r\n            answers: ['24 maj', '24 dec', '8 nov'],\r\n            correct: 1\r\n        },\r\n        {\r\n            question: 'Vad heter David i mellannamn?',\r\n            answers: ['sven', 'julia', 'anders'],\r\n            correct: 2\r\n        },\r\n        {\r\n            question: 'Vad har vit för hex tal?',\r\n            answers: ['#000000', '#ffffff', '#15f36a'],\r\n            correct: 1\r\n        },\r\n        {\r\n            question: 'vad sitter bredvid t på tangentbordet?',\r\n            answers: ['y', 'b', 'n'],\r\n            correct: 0\r\n        },\r\n        {\r\n            question: 'vad är bäst?',\r\n            answers: ['teams', 'discord', 'slack'],\r\n            correct: 1\r\n        }\r\n    ]\r\n}\r\n\r\nexport default Game;","import {Link} from 'react-router-dom';\r\n\r\nconst Welcome = () => (\r\n    <section>\r\n        <h2>Välkommen till denna Quiz!</h2>\r\n        <p>Vill du sätta igång?</p>\r\n        <Link to={process.env.PUBLIC_URL + \"/game/1\"}> \r\n            <button >Ja!</button>\r\n        </Link>\r\n    </section>\r\n)\r\n\r\nexport default Welcome;","import {Link} from 'react-router-dom';\r\n\r\nconst Result = ({ score, restartQuiz }) => (\r\n    <section>\r\n        <h2>Reultat</h2>\r\n        <p>Du fick {score} rätta svar!</p>\r\n        <Link to={process.env.PUBLIC_URL + \"/game/1\"}>\r\n            <button onClick={ restartQuiz}> Börja om </button>\r\n        </Link>\r\n    </section>    \r\n)\r\n\r\nexport default Result;","import './App.css';\r\nimport { useState } from 'react';\r\nimport Game from './components/Game';\r\nimport Welcome from './components/Welcome';\r\nimport Result from './components/Result';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  const [score, setScore] = useState(0);\r\n\r\n  const restartQuiz = () => {\r\n    setScore(0);\r\n  }\r\n\r\n  return (\r\n    \r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n          <h1>Quiz</h1>\r\n      </header>\r\n      <main>\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path={process.env.PUBLIC_URL + \"/\"}>\r\n              <Welcome />\r\n            </Route>\r\n            <Route exact path={process.env.PUBLIC_URL + \"/game\"}>\r\n              <Game \r\n                answeredCorrectly={() => setScore(score + 1)}\r\n              />\r\n            </Route>\r\n            <Route path={process.env.PUBLIC_URL + \"/game/:currentquestion\"}>\r\n              <Game \r\n                answeredCorrectly={() => setScore(score + 1)}\r\n              />\r\n            </Route>\r\n            <Route path={process.env.PUBLIC_URL + \"/result\"}>\r\n              <Result score= {score} restartQuiz={restartQuiz}  />\r\n            </Route>\r\n          </Switch>\r\n        </Router>    \r\n        Score: {score}\r\n      </main>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}